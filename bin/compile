#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e
export CWD=$(cd $(dirname $0)/; pwd)
export APP_DIR=/app
export BIN_DIR=$APP_DIR/.bin

mkdir -p $BIN_DIR

mv $CWD/* $BIN_DIR/

. $BIN_DIR/util/common.sh

# parse args
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
LOG_FILE='/tmp/commandbox-build-log.txt'

export_env_dir $ENV_DIR

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java
. /tmp/jvm-common/opt/jdbc.sh
install_java_with_overlay ${BUILD_DIR}

mkdir -p $CACHE_DIR

# Make sure permissions are in place on all of our scripts
chmod +x $BIN_DIR/util/*.sh
chmod +x $BIN_DIR/run/*.sh

status "Installing CommandBox"

mkdir $BUILD_DIR/bin
export PATH=$PATH:$BIN_DIR:$BUILD_DIR/bin

#Set our commandbox home directory
touch $BIN_DIR/commandbox.properties
chmod +rw $BIN_DIR/commandbox.properties
echo "$CACHE_DIR/.CommandBox" > $BIN_DIR/commandbox.properties

$BIN_DIR/util/install-commandbox.sh

# install CFConfig modules
status "Installing CFConfig module"
box install commandbox-cfconfig
status "CFConfig module successfully installed"

status "Commandbox Compilation Complete"

# change to build directory to handle ComandBox Startup
cd $APP_DIR

status "Configuring Container Host Defaults"
box server set web.host=0.0.0.0 openbrowser=false app.serverHomeDirectory=$CACHE_DIR/serverHome
status "Host Configuration Complete"


